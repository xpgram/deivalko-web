@use 'sass:color';
@use '../styles/font-families';

$smallScreenWidth: 45rem;

$previewPaneShadow: .4rem;

// TODO media break for small screens: description | project links
// TODO Extract common globals: max width = 100rem, media break = 45rem, etc.
// TODO Break this large-ass scss file (and js component) into smaller components?
//   The point would be code-reuse, but... will I reuse project-link styles? I mean, really?

// TODO media break should also force hamburger nav-menu; but that's handled in the Navbar component.

.block {
  margin: 0;
  padding: 0;
  width: 100%;
}

.preview {
  position: relative;
  width: 100%;
  height: 24rem;
  @media (max-width: $smallScreenWidth) {
    height: 20rem;
  }

  z-index: 10;
  overflow: hidden;

  $shadow: $previewPaneShadow;
  box-shadow: 0 $shadow*2/3 $shadow $shadow/4 #0006;

  
  // Letter box controls
  $LB-Margin: 10rem;
  $LB-transitionWidth: 4rem;
  $LB-opacity: .3;

  @mixin letterBoxBase {
    content: '';

    height: 100%;
    position: absolute;
    top: 0;
    z-index: var(--z-foreground);
    opacity: $LB-opacity;

    background: #000;
    box-shadow: 0 0 $LB-transitionWidth $LB-transitionWidth #000;
  }

  &::before {
    @include letterBoxBase;
    width: calc(50% - 50rem);
    left: -$LB-Margin;
  }

  &::after {
    @include letterBoxBase;
    width: calc(50% - 50rem);
    right: -$LB-Margin;
  }
}

.previewImage {
  min-width: 100%;
  min-height: 100%;

  position: relative;
  transform: translate(-50%, -50%);
  top: 50%;   // Not sure why top does nothing, but  w h a t e v e r .
  left: 50%;

  filter: brightness(50%) saturate(20%);
}

.gradientOverlay {
  width: 100%;
  height: 100%;

  position: absolute;
  top: 0;
  left: 0;

  background: radial-gradient(ellipse 102% 280% at 0% 0%, transparent 50%, #A79A 75%, #86BA 85%, #68BA);
  mix-blend-mode: overlay;
  // TODO Add cloud texture? Can I white mask an element or repeated image?
}

.titleWrapper {
  position: absolute;
  top: 0;
  left: 0;

  margin-top: 1rem;
  margin-left: 1rem;
  width: 100%;

  font-family: font-families.get('title');

  display: flex;
  justify-content: center;
}

.titleText {
  width: 100%;
  max-width: 100rem;
}

.titleWord {
  display: block;
}

@mixin headerText($size) {
  margin-top: -$size/4;
  width: $size;
  height: $size;
  font-size: $size;
  line-height: $size*1.8; // Fixes weird jittering, probably of non-standard character set.
  font-weight: 600;
}

.titleLetters {
  color: var(--text-primary);

  @include headerText(3.5rem);

  @media (max-width: $smallScreenWidth) {
    @include headerText(2.8rem);
  }
}

.body {
  position: relative;
  width: 100%;
  max-width: 100rem;
  margin: 0 auto;

  $light: color.adjust(#242024, $lightness: 5%);
  $dark: #242024;
  background: linear-gradient(to bottom, #{$light} 50%, $dark);

  display: flex;
  justify-content: center;
}

.mainWrapper {
  width: 100%;
  max-width: 100rem;
}

.main {
  display: inline-block;

  margin-left: -.1rem;
  margin-right: 2rem;
  padding: 1rem;
  padding-top: 1.5rem;

  width: calc(100% - 22rem);
  min-width: 40ch;        // TODO Add a media break here so that {width: calc(100% - 10ch);} instead.
  max-width: 60ch;          

  color: var(--text-primary);
  font-size: 1.5rem;

  box-shadow: 1.75rem .75rem 1.5rem -1.75rem #0008;

  overflow: hidden;

  @media (max-width: $smallScreenWidth) {
    width: calc(100% - 9rem);
    min-width: 0;
    font-size: 1.25rem;
    line-height: 2rem;
  }
}

.technologies {
  padding-left: .8rem;
  opacity: .5;

  font-size: 1.1rem;
  letter-spacing: .2rem;
}

.technologyWord {
  $gap: 1.5rem;

  display: inline-block;
  margin-right: $gap;

  font-family: font-families.get('extra-detail');

  &::after {
    content: '/';
    position: relative;
    left: $gap / 2;
  }

  &:last-child {
    &::after {
      content: '';
    }
  }
}

.description {
  margin-top: .5rem;
}

.endbar {
  $margin: 1.25rem;
  margin-top: $margin;
  margin-bottom: $margin * 2;

  width: 16ch;
  height: .4rem;
  background: #A79;
  border-radius: 1rem;

  @media (max-width: $smallScreenWidth) {
    width: 12ch;
  }
}

.sidebarWrapper {
  display: inline-block;
  position: relative;
  vertical-align: top;
  overflow: hidden;
}

.sidebar {
  width: 10ch;

  $barWidth: .25rem;
  border-left: $barWidth solid #A79;
  padding-left: $barWidth;

  // Draw a shadow from the preview image over the link menu.
  &::before {
    content: '';

    position: absolute;
    top: -1rem;
    left: 0;

    width: 100%;
    height: 1rem;

    $shadow: $previewPaneShadow;
    box-shadow: 0 0rem $shadow $shadow/2 #0008;
  }
}

.link {
  display: block;

  margin: 0;
  padding: 0;
  text-align: center;

  $height: 2.5rem;

  width: 100%;
  height: $height;

  // background color
  $bg-color: #A79;
  $light: color.adjust($bg-color, $lightness: 2.5%);
  $dark: color.adjust($bg-color, $lightness: -2.5%);
  background: linear-gradient(to bottom, #{$light} 95%, #{$dark});

  outline: none;
  border: none;

  color: white;
  font-family: font-families.get('button-link');
  font-size: 1.5rem;
  font-weight: 500;
  text-decoration: none;
  text-transform: uppercase;
  line-height: $height;
  letter-spacing: .2rem;

  user-select: none;
  
  &:hover, &:focus {
    // background color
    $bg-color: color.adjust($bg-color, $lightness: 8%, $saturation: 8%);
    $light: color.adjust($bg-color, $lightness: 2.5%);
    background: linear-gradient(to bottom, #{$light} 95%, #{$dark});
  }

  &:first-child {
    height: $height + .5rem;
    line-height: $height + 1rem;
  }

  &:last-child {
    border-bottom-left-radius: .2rem;
    border-bottom-right-radius: .2rem;
  }
}